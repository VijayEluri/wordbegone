import org.apache.tools.ant.filters.*
import java.text.*

apply plugin: 'java'
apply plugin: 'distribution'

ext {
  appName = "PublisherPipeline"
  author = "Leanne Northrop"
  groovyVersion = "2.4.10"
}

sourceCompatibility = 1.8
version = '1.0-SNAPSHOT'

jar {
    manifest {
        attributes 'Implementation-Title': "${appName}",
                   'Implementation-Version': version,
                   "Main-Class":"org.northrop.leanne.publisher.Main",
                   "Extension-Name": "${appName}",
                   "Implementation-Vendor-Id" : "${author}",
                   "Built-Date": new Date().format("yyyy-MM-dd HH:mm:ss")
    }
}

repositories {
    flatDir name: 'localRepository', dirs: 'libs'
    mavenCentral()
}

dependencies {
    compile group: 'net.sourceforge.saxon', name: 'saxon', version: '9.1.0.8'
    compile group: 'org.fusesource.wikitext', name: 'textile-core', version: '1.4'
    compile group: 'org.fusesource.wikitext', name: 'wikitext-core', version: '1.4'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: "${groovyVersion}"
    compile group: 'net.sourceforge.nekohtml', name: 'nekohtml', version: '1.9.22'
    compile group: 'org.apache.ant', name: 'ant', version: '1.9.4'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    testCompile group: 'junit', name: 'junit', version: '4.7'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

distributions {
    main {
        contents {
          from jar
          into('/'){
            from 'src/dist'
            filter(ReplaceTokens, tokens: [author: author,
                                           gradleVersion: gradle.gradleVersion,
                                           version: version,
                                           appName: appName,
                                           jarName: jar.archivePath.name,
                                           buildDate: new Date().format("yyyy-MM-dd HH:mm:ss")])
            exclude { details -> details.file.name.contains("bin")}
          }
          into('bin'){
            from 'src/dist/bin'
            filter(ReplaceTokens, tokens: [author: author,
                                           gradleVersion: gradle.gradleVersion,
                                           version: version,
                                           appName: appName,
                                           jarName: jar.archivePath.name,
                                           buildDate: new Date().format("yyyy-MM-dd HH:mm:ss")])
          }
          into('lib') {
            from configurations.runtime
          }
        }
    }
}
